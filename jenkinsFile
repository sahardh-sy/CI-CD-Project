pipeline {
    agent any
    tools {
        maven '3.8.6'
    }    
    environment {
       
        imageName = "back_achat"
        registry="sahar24/front_back"
    	registryCredential='dockerHub'
    	dokerImage="back_achat"
    }

    stages {
        stage("Cloning Project"){
            steps {
                cleanWs()
                checkout scm
                sh 'git rev-parse --short HEAD > .git/commit-id'
                script {
                    commit_id = readFile('.git/commit-id').trim()  
                
                echo 'checkout stage'
            }
        }
        }   
        stage ('MVN clean') {
            steps {
                sh 'mvn clean'
                echo 'Build stage done'
            }
        }
 
        stage("compile Project"){
            steps {
                sh 'mvn compile'
                echo 'compile stage done'
            }        
        }

        stage('JUnit Test') {
            steps {
                  sh 'mvn test'
            }
        }       
        stage('SonarQube Scan Code Quality') {
            steps {
                withSonarQubeEnv('SonarQube') {
                  sh 'mvn sonar:sonar'
                }
            }
        }
        stage('Packaging') {
            steps {
                  sh 'mvn clean package -DskipTests=true'
            }
        }
        
        stage('Build Docker image ') {
           
            steps {
                script {
                    dockerImage = docker.build imageName + ":${commit_id}"
                }
            }
        }   
        stage("docker push") {
            steps{
                script {
                    docker.withRegistry( '', registryCredential ) {
                    dockerImage.push()   
                }
                }
            }
        }   
         
     
    }
}