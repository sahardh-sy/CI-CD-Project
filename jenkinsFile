pipeline {
    agent any
    tools {
        maven '3.8.6'
    }    
    environment {
       
        imageName = "back_achat"
        registry="sahar24/front_back"
    	registryCredential='dockerHub'
    	DOCKERHUB_CREDENTIALS=credentials('dockerhub-cred')
    	dokerImage="back_achat"
    }

    stages {
        stage("Cloning Project"){
            steps {
                cleanWs()
                checkout scm
                sh 'git rev-parse --short HEAD > .git/commit-id'
                script {
                    commit_id = readFile('.git/commit-id').trim()  
                
                echo 'checkout stage'
            }
        }
        }   
        stage ('MVN clean') {
            steps {
                sh 'mvn clean'
                echo 'Build stage done'
            }
        }
 
        stage("compile Project"){
            steps {
                sh 'mvn compile'
                echo 'compile stage done'
            }        
        }

        stage('JUnit Test') {
            steps {
                  sh 'mvn test'
            }
        }       
        stage('SonarQube Scan Code Quality') {
            steps {
                withSonarQubeEnv('SonarQube') {
                  sh 'mvn sonar:sonar'
                }
            }
        }
        stage('Packaging') {
            steps {
                  sh 'mvn clean package -DskipTests=true'
            }
        }
        
		
		
		stage("Build image"){
            steps {

                sh '''
                
                docker build -t sahar24/back_achat:${IMAGETAG}}  . 

                '''

                  echo 'image builded'
            }
        
        stage("Push image"){
            steps {
                 script{
                    withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'dockerhub-cred',
                    usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD']]) {
                        env.REG_USERNAME = USERNAME
                        env.REG_PASSWORD = PASSWORD
                    }

               sh ''' 
               docker login --username=${REG_USERNAME} --password=${REG_PASSWORD}
                docker push sahar24/back_achat:${IMAGETAG} 
                '''

            }
            }
        }

    
    
    }
	environment {
        
        IMAGETAG = "${env.BUILD_ID}"
    }
}